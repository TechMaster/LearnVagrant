# -*- mode: ruby -*-
# vi: set ft=ruby :
VAGRANTFILE_API_VERSION = "2"
BOX_NAME = "symbols/ubuntu-docker"
PROVIDER = "vmware_desktop"  # "virtualbox"
MEMORY = "512"
CPUS = 2

MANAGERS = 3
MANAGER_IP = ["192.168.33.2", "192.168.33.3", "192.168.33.4"]

#----- Đoạn mã thực hiện sau khi các VM đã được tạo ra
@setup01 = <<SCRIPT
echo "Additional set up Manager01 ..."
echo "192.168.33.2 manager01" >> /etc/hosts
echo "192.168.33.3 manager02" >> /etc/hosts
echo "192.168.33.4 manager03" >> /etc/hosts
mkdir -p /etc/docker
touch /etc/docker/daemon.json
cat >> /etc/docker/daemon.json <<EOL
{
  "insecure-registries" : [ "manager02:5000" ]
}
EOL
systemctl daemon-reload
systemctl restart docker
SCRIPT

@setup02 = <<SCRIPT
echo "Additional set up Manager02 ..."
mkdir -p /home/vagrant/registry-data
echo "192.168.33.2 manager01" >> /etc/hosts
echo "192.168.33.3 manager02" >> /etc/hosts
echo "192.168.33.4 manager03" >> /etc/hosts
mkdir -p /etc/docker
touch /etc/docker/daemon.json
cat >> /etc/docker/daemon.json <<EOL
{
  "insecure-registries" : [ "manager02:5000" ]
}
EOL
systemctl daemon-reload
systemctl restart docker
SCRIPT

@setup03 = <<SCRIPT
echo "Additional set up Manager03 ..."
echo "192.168.33.2 manager01" >> /etc/hosts
echo "192.168.33.3 manager02" >> /etc/hosts
echo "192.168.33.4 manager03" >> /etc/hosts
mkdir -p /etc/docker
touch /etc/docker/daemon.json
cat >> /etc/docker/daemon.json <<EOL
{
  "insecure-registries" : [ "manager02:5000" ]
}
EOL
systemctl daemon-reload
systemctl restart docker
SCRIPT

#------ Khởi động 3 máy ảo 
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    #Common setup
    config.vm.box = BOX_NAME
    config.vm.provider PROVIDER do |vb|
      vb.memory = MEMORY
      vb.cpus = CPUS
    end
    #Setup Manager Nodes
    (1..MANAGERS).each do |i|
        config.vm.define "manager0#{i}" do |manager|
          manager.vm.network :private_network, ip: MANAGER_IP[i-1]          
          manager.vm.hostname = "manager0#{i}"
          manager.vm.synced_folder "./src", "/home/vagrant/src"
          if i == 1  # Server Manager đầu tiên của Docker Swarm
            manager.vm.provider PROVIDER do |pmv|
              pmv.memory = 4096
            end           
            manager.vm.network :forwarded_port, guest: 80, host: 80 # Web
            manager.vm.network :forwarded_port, guest: 8080, host: 8080 # Traefik Dashboard            
            manager.vm.network :forwarded_port, guest: 443, host: 443 # SSL
            manager.vm.network :forwarded_port, guest: 9000, host: 9000 # Portainer
            manager.vm.network :forwarded_port, guest: 8000, host: 8000 #
            manager.vm.network :forwarded_port, guest: 8001, host: 8001
            manager.vm.network :forwarded_port, guest: 8002, host: 8002            
            manager.vm.network :forwarded_port, guest: 5432, host: 5432 # Postgresql
            manager.vm.network :forwarded_port, guest: 6379, host: 6379 # Redis
          end
          if i == 2 # Manager02 chứa dịch vụ Registry
            manager.vm.network :forwarded_port, guest: 5000, host: 5000 # Docker Registry
          end

          # Thực hiện mã cấu hình sau khi các VM được tạo
          manager.vm.provision "shell",inline: instance_variable_get("@setup0#{i}"), privileged: true
        end        
    end
end